@model MySite.Models.VenuesSearchResult


<div class="container">
    <div class="row">
        <div class="col-3">
            <form action="/" data-ajax="true" method="post" id="SearchForm">
                <input type="text" name="titleQuery" placeholder="enter something" />
                @foreach (var category in Model.Facets.Categories)
                {
                    <fieldset>
                        <legend style="text-transform: capitalize; background-color: bisque;">@category.Name</legend>
                        @foreach (var category_value in category.Values)
                        {
                            <input class="checkboxes" type="checkbox" style="float: left; margin-top: 5px;" name="@category.Name" value="@category_value.Name">
                            <div style="margin-left: 25px;">
                                <p>@category_value.Name</p>
                            </div>
                        }
                    </fieldset>
                }
                <button>Search</button>
            </form>
        </div>

        <div class="col-9">
            <div id="results">
               

            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    var pageNumber = 1;
    var resultCountAlert = "@Sitecore.Globalization.Translate.Text("TotalResultsCountLanguageName")";
    var searchForm;
    searchForm = document.getElementById("SearchForm");
    window.onload = function () {
       
        var submitEvent = new Event("submit");
        searchForm.dispatchEvent(submitEvent);
        var checkboxes = document.getElementsByClassName("checkboxes");
          for (var i = 0; i < checkboxes.length; i++) {
        checkboxes[i].addEventListener("click", function () {
            var submitEvent = new Event("submit");
            searchForm.dispatchEvent(submitEvent);
        });
              //var langLinks = document.getElementsByClassName("language-tumbler");
              //for (var i = 0; i < langLinks.length; i++) {
              //    langLinks[i].addEventListener("click", function (e) {
              //        e.preventDefault();
              //        var submitEvent = new Event("submit");
              //        searchForm.dispatchEvent(submitEvent);
              //        console.log("Tumbler is clicked");
              //    });
              //}

        }
        console.log("hsdfds");
    }
    //document.getElementById("resultsCount").innerText = resultCountAlert;

   //var searchForm = document.getElementById("SearchForm");
   //var paginationLinks =  document.getElementsByClassName("custom_pagination");
   // var checkboxes = document.getElementsByClassName("checkboxes");
  


    //for (var i = 0; i < paginationLinks.length; i++) {
    //    paginationLinks[i].addEventListener("click", function (e) {
    //        e.preventDefault();
    //        pageNumber = e.target.text;
    //        var submitEvent = new CustomEvent("submit", { "detail": { "pN": pageNumber } });
    //        searchForm.dispatchEvent(submitEvent);
    //    });
    //}

    searchForm.addEventListener("submit", function (e) {
        e.preventDefault();

        try {
            if (e.detail.pN == undefined) {
                pageNumber = 1;
            }
        } catch (e) {
            pageNumber = 1;
        }


        console.log(e.target.category);
        var query = {TitleQuery: e.target.titleQuery.value};


        query["Categories"] = Array.from(e.target.category).filter(function (cat) {
            if (cat.checked) return true;
        }).map(function (cat) {
            return cat.value;
        });

        query["Tags"] = Array.from(e.target.tags).filter(function (tag) {
            if (tag.checked) return true;
        }).map(function (tag) {
            return tag.value;
        });

        query["PageNumber"] = pageNumber;
        query["ItemsPerPage"] = @Model.ItemsPerPage;
        query["Lang"] = "@Model.Lang";

        console.log(query);

        fetch("/api/Sitecore/TeamsSearch/ShowSearchedVenues", {
            method: "POST",
            headers: { 'Content-type': 'application/json' },
            body: JSON.stringify(query),
        }).then(function (res) {
            console.log(res);
            return res.text();
            }).then(function (data) {
                console.log(data);
            var x = document.getElementById("results");
            x.innerHTML = data;
            return true;
        }).then(() => {
            var paginationLinks = document.getElementsByClassName("custom_pagination");

            try {
                document.getElementById("resultsCount").innerText = resultCountAlert;
            } finally {
                console.log("Error");
            }

            console.log(paginationLinks);
            for (var i = 0; i < paginationLinks.length; i++) {
                paginationLinks[i].addEventListener("click", function (e) {
                    e.preventDefault();
                    pageNumber = e.target.text;
                    var submitEvent = new CustomEvent("submit", { "detail": { "pN": pageNumber } });
                    searchForm.dispatchEvent(submitEvent);
                })
            }
        });


    });
</script>

